language: python
dist: xenial

env:
  global:
    - COVERALLS_PARALLEL=true
  matrix:
    # Labeling
    - TEST_FILE=tests/labeling/
    # classification part 1
    - TEST_FILE="tests/classification/test_cnn_lstm.py tests/classification/test_cnn_gru.py tests/classification/test_cnn.py tests/classification/test_kmax_cnn.py"
    # classification part 2
    - TEST_FILE="tests/classification/test_r_cnn.py tests/classification/test_dropout_bigru.py tests/classification/test_avcnn.py tests/classification/test_bi_gru.py"
    # classification part 3
    - TEST_FILE="tests/classification/test_dpcnn.py tests/classification/test_bi_lstm.py tests/classification/test_avrnn_model.py tests/classification/test_dropout_avrnn.py"
    - TEST_FILE="tests/test_callbacks.py tests/test_corpus.py tests/test_processor.py"
    - TEST_FILE=tests/test_custom_multi_output_classification.py
    # Embedding
    - TEST_FILE=tests/embedding/

python:
  - "3.6"
  - "3.7"

cache: pip

before_install:
  - export BOTO_CONFIG=/dev/null

stages:
  - Lint
  - name: Test
    if: (branch = master) OR (type IN (pull_request))
  - name: Document
    if: branch = master AND (NOT (type IN (pull_request)))

install:
  - pip install jieba
  - pip install python-coveralls
  - pip install -e .
  - pip install tensorflow==1.14.0
  - pip install coverage
  - pip install nose
  - python -c "import kashgari;print(f'kashgari version {kashgari.__version__}')"
  - git fetch --unshallow --quiet

script: nosetests --with-coverage --cover-html --cover-html-dir=htmlcov
  --cover-xml --cover-xml-file=coverage.xml --with-xunit
  --cover-package="kashgari"
  $TEST_FILE

after_script:
  - coveralls

notifications:
  webhooks: https://coveralls.io/webhook

jobs:
  include:
    - stage: Lint
      python: "3.6"
      install:
        - pip install flake8 flake8-builtins
      script:
        - flake8 kashgari

    - stage: Document
      python: "3.6"
      install:
        - echo -e "machine github.com\n  login ${GITHUB_TOKEN}" > ~/.netrc
        - pip install mkdocs mkdocs-material pymdown-extensions
      script:
        - cd mkdocs
        - mkdocs gh-deploy --force --clean
